services:
  preprocess:
    build:
      context: .
      dockerfile: Dockerfile.preprocess
    volumes:
      - ./data:/app/data # Mount shared volume for the dataset
    command: python3 prepare_dataset.py # Runs preprocessing and stops

  train-models-covariates-cpu:
    build:
      context: .
      dockerfile: Dockerfile.cpu
    volumes:
      - ./data:/app/data
      - ./src:/app
    command: python3 train_models_covariates.py

  all-models-sliding-window-cpu:
    build:
      context: .
      dockerfile: Dockerfile.cpu
    volumes:
      - ./data:/app/data
      - ./src:/app
    command: python3 train_univariate_models.py

  baseline-no-window-cpu:
    build:
      context: .
      dockerfile: Dockerfile.cpu
    volumes:
      - ./data:/app/data
      - ./src:/app
    command: python3 train_models_no_sliding_window.py --models baseline

  dl-no-window-gpu:
    build:
      context: .
      dockerfile: Dockerfile.gpu
    runtime: nvidia # Ativa o suporte a GPU sem precisar de deploy.resources
    environment:
      - NVIDIA_VISIBLE_DEVICES=all # Configura a visibilidade de todas as GPUs
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility
    volumes:
      - ./data:/app/data
      - ./src:/app
    command: python3 train_models_no_sliding_window.py --models deep_learning

  jupyterlab:
    build:
      context: .
      dockerfile: Dockerfile.jupyterlab
    ports:
      - "8888:8888" # Porta para acesso externo
    volumes:
      - ./data:/home/jovyan/work/data
      - ./notebooks:/home/jovyan/work
      - ./src:/home/jovyan/work/src
    environment:
      - NB_UID=1000 # UID do usuário jovyan
      - NB_GID=100 # GID do grupo jovyan
      - NOTES_DIR=/home/jovyan/work # Define o diretório de trabalho padrão
    command: start-notebook.py --IdentityProvider.token='MeuProjeto2024@' --ServerApp.ip='0.0.0.0' --ServerApp.allow_remote_access=True --ServerApp.root_dir='/home/jovyan/work'

  gpu-check:
    build:
      context: .
      dockerfile: Dockerfile.gpu_check
    # image: nvidia/cuda:12.2.0-base-ubuntu22.04
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              capabilities:
                - gpu
                - utility
                - compute
    security_opt:
      - label=disable
    entrypoint: [ "nvidia-smi", "-L" ]

  clean-results-data:
    image: alpine:latest
    volumes:
      - ./data:/data
    command: sh -c "rm -rf /data/*" # Comando para excluir tudo dentro da pasta /data
